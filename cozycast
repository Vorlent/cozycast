#!/bin/bash
source .env

function coturn_add_kurento_user {
    sudo -E docker exec -it cozycast_coturn_1 \
        turnadmin -a -u kurento -p $KURENTO_PASSWORD -r kurento.org
}

function liquibase_update {
    sudo docker run --rm -it \
        -v $(readlink -f ../liquibase/changelog.xml):/changelog.xml \
        -v $(readlink -f ../liquibase/driver):/liquibase/jdbc \
        --network host \
        liquibase/liquibase \
        --driver=org.postgresql.Driver \
        --classpath=/liquibase/jdbc/postgresql-42.2.9.jre7.jar \
        --url="jdbc:postgresql://$COZYCAST_DB_HOST:5432/cozycast" \
        --changeLogFile=/changelog.xml \
        --username=cozycast \
        --password=$COZYCAST_DB_PASS \
        update
}

case $1 in
    start)
        mkdir -p cozycast-server/cache/avatar
        cd docker-compose
        sudo -E docker-compose -p cozycast -f docker-compose.yml up -d
        coturn_add_kurento_user
        liquibase_update
        exit;
        ;;
    stop)
        cd docker-compose
        sudo -E docker-compose -p cozycast -f docker-compose.yml down
        exit;
        ;;
    build)
        cd docker-compose
        sudo -E docker-compose -p cozycast -f docker-compose.yml build
        exit;
        ;;
    dev)
        mkdir -p cozycast-server/cache/avatar
        cd docker-compose
        export SOURCE_URL=$(git remote get-url origin)
        sudo -E docker-compose -p cozycast -f docker-compose.yml -f docker-compose.dev.yml up -d
        coturn_add_kurento_user
        liquibase_update
        exit;
        ;;
    db)
        sudo docker exec -it cozycast_postgres_1 psql -U cozycast
        exit;
        ;;
    ssl)
        case $2 in
            certbot)
                sudo -E docker run --rm -it -v $(realpath data/certbot):/etc/letsencrypt/ certbot/certbot \
                    --server https://acme-v02.api.letsencrypt.org/directory -d $DUCKDNS_DOMAIN --manual --preferred-challenges dns-01 certonly
                exit;
                ;;
            duckdns)
                TXT_SECRET=$2
                curl "https://www.duckdns.org/update?domains=$DUCKDNS_DOMAIN&token=$DUCKDNS_TOKEN&txt=$TXT_SECRET"
                exit;
                ;;
            keystore)
                DIRECTORY=$(sudo -E realpath data/certbot/live/$DUCKDNS_DOMAIN)
                echo $DIRECTORY
                sudo -E openssl pkcs12 -export \
                         -in $DIRECTORY/cert.pem \
                         -inkey $DIRECTORY/privkey.pem \
                         -out $DIRECTORY/server.p12 \
                         -CAfile $DIRECTORY/chain.pem -chain \
                         -name $DUCKDNS_DOMAIN \
                         -passout 'env:KEYSTORE_PASSWORD'
                exit;
                ;;
            *)
                printf "Usage: $0 $1: <certbot|duckdns|keystore>\n"
                printf "\n"
                printf "    certbot   Request certificate via certbot\n"
                printf "    duckdns   Update TXT record of duckdns domain \n"
                printf "    keystore  Convert certificate to .p12 keystore \n"
                exit 2
                ;;
        esac
        ;;
    gvisor)
        (
          set -e
          URL=https://storage.googleapis.com/gvisor/releases/master/latest
          wget ${URL}/runsc
          wget ${URL}/runsc.sha512
          sha512sum -c runsc.sha512
          rm -f runsc.sha512
          sudo mv runsc /usr/local/bin
          sudo chown root:root /usr/local/bin/runsc
          sudo chmod 0755 /usr/local/bin/runsc
          sudo cp docker-compose/gvisor.json /etc/docker/daemon.json
          sudo chmod 644 /etc/docker/daemon.json
          sudo chown root:root /etc/docker/daemon.json
        )
        ;;
    *)
        printf "Usage: %s: <start|stop|build|dev|db>\n" $0
        printf "\n"
        printf "    start   Starts cozycast containers with the latest docker image\n"
        printf "    stop    Stops all cozycast containers\n"
        printf "    build   Builds all cozycast docker images\n"
        printf "    dev     Start cozycast in live edit mode\n"
        printf "    db      Connect to postgres via psql\n"
        exit 2
        ;;
esac
